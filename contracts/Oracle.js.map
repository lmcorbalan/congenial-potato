{"version":3,"sources":["../src/contracts/Oracle.ts"],"names":["Oracle","SmartContract","build","web3","networkId","eth","net","getId","networks","address","transactionHash","builder","configure","contractName","abi","options","getPrice","asset","price","contract","methods","call"],"mappings":";;;;;;;AAEA;;;;AADA;AAGO,MAAMA,MAAN,SAAqBC,sBAArB,CAAmC;AACxC,eAAaC,KAAb,CAAmBC,IAAnB,EAAgD;AAC9C,UAAMC,SAAS,GAAG,MAAMD,IAAI,CAACE,GAAL,CAASC,GAAT,CAAaC,KAAb,EAAxB;AACA,UAAMC,QAAQ,GAAG;AACf,OAACJ,SAAD,GAAa;AACXK,QAAAA,OAAO,EAAE,4CADE;AAEXC,QAAAA,eAAe,EAAE;AAFN;AADE,KAAjB;AAOA,UAAMC,OAAO,GAAGX,MAAM,CAACY,SAAP,CAAiB;AAAEC,MAAAA,YAAY,EAAE,QAAhB;AAA0BC,MAAAA,GAA1B;AAA+BN,MAAAA;AAA/B,KAAjB,CAAhB;AACA,UAAMO,OAAO,GAAG,MAAMJ,OAAO,CAACR,IAAD,CAA7B;AAEA,WAAO,IAAIH,MAAJ,CAAWe,OAAX,CAAP;AACD;;AAED,QAAMC,QAAN,CAAeC,KAAf,EAA8B;AAC5B,UAAMC,KAAK,GAAG,MAAM,KAAKC,QAAL,CAAcC,OAAd,CAAsBJ,QAAtB,CAA+BC,KAA/B,EAAsCI,IAAtC,EAApB;AAEA,WAAOH,KAAP;AACD;;AApBuC;;;eAuB3BlB,M;;AAGf,MAAMc,GAAG,GAAI,CACX;AACE,cAAY,IADd;AAEE,YAAU,EAFZ;AAGE,UAAQ,aAHV;AAIE,aAAW,CACT;AACE,YAAQ,EADV;AAEE,YAAQ;AAFV,GADS,CAJb;AAUE,aAAW,KAVb;AAWE,qBAAmB,MAXrB;AAYE,UAAQ;AAZV,CADW,EAeX;AACE,YAAU,CACR;AACE,YAAQ,gBADV;AAEE,YAAQ;AAFV,GADQ,CADZ;AAOE,aAAW,KAPb;AAQE,qBAAmB,YARrB;AASE,UAAQ;AATV,CAfW,EA0BX;AACE,cAAY,IADd;AAEE,YAAU,CACR;AACE,YAAQ,OADV;AAEE,YAAQ;AAFV,GADQ,CAFZ;AAQE,UAAQ,UARV;AASE,aAAW,CACT;AACE,YAAQ,EADV;AAEE,YAAQ;AAFV,GADS,CATb;AAeE,aAAW,KAfb;AAgBE,qBAAmB,MAhBrB;AAiBE,UAAQ;AAjBV,CA1BW,CAAb","sourcesContent":["import Web3 from 'web3'\n// import abi from './abis/Oracle.json'\nimport SmartContract from './SmartContract'\n\nexport class Oracle extends SmartContract {\n  static async build(web3: Web3): Promise<Oracle> {\n    const networkId = await web3.eth.net.getId()\n    const networks = {\n      [networkId]: {\n        address: \"0x7054e08461e3eCb7718B63540adDB3c3A1746415\",\n        transactionHash: ''\n      }\n    }\n\n    const builder = Oracle.configure({ contractName: 'Oracle', abi, networks })\n    const options = await builder(web3)\n\n    return new Oracle(options)\n  }\n\n  async getPrice(asset: string) {\n    const price = await this.contract.methods.getPrice(asset).call()\n\n    return price\n  }\n}\n\nexport default Oracle\n\n\nconst abi =  [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"PriceOracle\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"_oracleAddress\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"asset\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getPrice\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  }\n]\n"],"file":"Oracle.js"}